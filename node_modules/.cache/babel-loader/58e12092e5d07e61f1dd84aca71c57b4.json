{"ast":null,"code":"var _jsxFileName = \"/Users/lchen/Documents/CODE/vizCode/air-pollution/src/charts.js\";\nimport React from 'react';\nimport { charts } from './style';\nimport { VerticalBarSeries, XAxis, XYPlot, YAxis } from 'react-vis';\nexport default function Charts({\n  highlight,\n  highlightedHour,\n  pickups,\n  select,\n  selectedHour\n}) {\n  if (!pickups) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: charts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    });\n  }\n\n  const data = pickups.map(d => {\n    let color = '#125C77';\n\n    if (d.hour === selectedHour) {\n      color = '#19CDD7';\n    }\n\n    if (d.hour === highlightedHour) {\n      color = '#17B8BE';\n    }\n\n    return { ...d,\n      color\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: charts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, \"Pickups by hour\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, \"As percentage of all trips\"), /*#__PURE__*/React.createElement(XYPlot, {\n    margin: {\n      left: 40,\n      right: 25,\n      top: 10,\n      bottom: 25\n    },\n    height: 140,\n    width: 480,\n    yDomain: [0, 1000],\n    onMouseLeave: () => highlight(null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(YAxis, {\n    tickFormat: d => (d / 100).toFixed(0) + '%',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(VerticalBarSeries, {\n    colorType: \"literal\",\n    data: data,\n    onValueMouseOver: d => highlight(d.hour),\n    onValueClick: d => select(d.hour),\n    style: {\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    tickFormat: h => h % 24 >= 12 ? (h % 12 || 12) + 'PM' : (h % 12 || 12) + 'AM',\n    tickSizeInner: 0,\n    tickValues: [0, 6, 12, 18, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/lchen/Documents/CODE/vizCode/air-pollution/src/charts.js"],"names":["React","charts","VerticalBarSeries","XAxis","XYPlot","YAxis","Charts","highlight","highlightedHour","pickups","select","selectedHour","data","map","d","color","hour","left","right","top","bottom","toFixed","cursor","h"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,SAAvB;AAEA,SACEC,iBADF,EAEEC,KAFF,EAGEC,MAHF,EAIEC,KAJF,QAKO,WALP;AAOA,eAAe,SAASC,MAAT,CAAgB;AAC7BC,EAAAA,SAD6B;AAE7BC,EAAAA,eAF6B;AAG7BC,EAAAA,OAH6B;AAI7BC,EAAAA,MAJ6B;AAK7BC,EAAAA;AAL6B,CAAhB,EAMZ;AACD,MAAI,CAACF,OAAL,EAAc;AACZ,wBAAQ;AAAK,MAAA,KAAK,EAAER,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACD;;AACD,QAAMW,IAAI,GAAGH,OAAO,CAACI,GAAR,CAAYC,CAAC,IAAI;AAC5B,QAAIC,KAAK,GAAG,SAAZ;;AACA,QAAID,CAAC,CAACE,IAAF,KAAWL,YAAf,EAA6B;AAC3BI,MAAAA,KAAK,GAAG,SAAR;AACD;;AACD,QAAID,CAAC,CAACE,IAAF,KAAWR,eAAf,EAAgC;AAC9BO,MAAAA,KAAK,GAAG,SAAR;AACD;;AACD,WAAO,EAAE,GAAGD,CAAL;AAAQC,MAAAA;AAAR,KAAP;AACD,GATY,CAAb;AAWA,sBAAQ;AAAK,IAAA,KAAK,EAAEd,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADM,eAEN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFM,eAGN,oBAAC,MAAD;AACE,IAAA,MAAM,EAAE;AAAEgB,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,KAAK,EAAE,EAAnB;AAAuBC,MAAAA,GAAG,EAAE,EAA5B;AAAgCC,MAAAA,MAAM,EAAE;AAAxC,KADV;AAEE,IAAA,MAAM,EAAE,GAFV;AAGE,IAAA,KAAK,EAAE,GAHT;AAIE,IAAA,OAAO,EAAE,CAAC,CAAD,EAAI,IAAJ,CAJX;AAKE,IAAA,YAAY,EAAE,MAAMb,SAAS,CAAC,IAAD,CAL/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,KAAD;AACE,IAAA,UAAU,EAAEO,CAAC,IAAI,CAACA,CAAC,GAAG,GAAL,EAAUO,OAAV,CAAkB,CAAlB,IAAuB,GAD1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAUE,oBAAC,iBAAD;AACE,IAAA,SAAS,EAAC,SADZ;AAEE,IAAA,IAAI,EAAET,IAFR;AAGE,IAAA,gBAAgB,EAAEE,CAAC,IAAIP,SAAS,CAACO,CAAC,CAACE,IAAH,CAHlC;AAIE,IAAA,YAAY,EAAEF,CAAC,IAAIJ,MAAM,CAACI,CAAC,CAACE,IAAH,CAJ3B;AAKE,IAAA,KAAK,EAAE;AAAEM,MAAAA,MAAM,EAAE;AAAV,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,eAiBE,oBAAC,KAAD;AACE,IAAA,UAAU,EAAEC,CAAC,IAAKA,CAAC,GAAG,EAAL,IAAY,EAAZ,GACf,CAACA,CAAC,GAAG,EAAJ,IAAU,EAAX,IAAiB,IADF,GAEf,CAACA,CAAC,GAAG,EAAJ,IAAU,EAAX,IAAiB,IAHrB;AAKE,IAAA,aAAa,EAAE,CALjB;AAME,IAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,EAAe,EAAf,CANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CAHM,CAAR;AA8BD","sourcesContent":["import React from 'react';\nimport { charts } from './style';\n\nimport {\n  VerticalBarSeries,\n  XAxis,\n  XYPlot,\n  YAxis\n} from 'react-vis';\n\nexport default function Charts({\n  highlight,\n  highlightedHour,\n  pickups,\n  select,\n  selectedHour\n}) {\n  if (!pickups) {\n    return (<div style={charts} />);\n  }\n  const data = pickups.map(d => {\n    let color = '#125C77';\n    if (d.hour === selectedHour) {\n      color = '#19CDD7';\n    }\n    if (d.hour === highlightedHour) {\n      color = '#17B8BE';\n    }\n    return { ...d, color };\n  });\n\n  return (<div style={charts}>\n    <h2>Pickups by hour</h2>\n    <p>As percentage of all trips</p>\n    <XYPlot\n      margin={{ left: 40, right: 25, top: 10, bottom: 25 }}\n      height={140}\n      width={480}\n      yDomain={[0, 1000]}\n      onMouseLeave={() => highlight(null)}\n    >\n      <YAxis\n        tickFormat={d => (d / 100).toFixed(0) + '%'}\n      />\n      <VerticalBarSeries\n        colorType=\"literal\"\n        data={data}\n        onValueMouseOver={d => highlight(d.hour)}\n        onValueClick={d => select(d.hour)}\n        style={{ cursor: 'pointer' }}\n      />\n      <XAxis\n        tickFormat={h => (h % 24) >= 12 ?\n          (h % 12 || 12) + 'PM' :\n          (h % 12 || 12) + 'AM'\n        }\n        tickSizeInner={0}\n        tickValues={[0, 6, 12, 18, 24]}\n      />\n    </XYPlot>\n  </div>);\n}"]},"metadata":{},"sourceType":"module"}