{"ast":null,"code":"var _jsxFileName = \"/Users/lchen/Documents/CODE/vizCode/air-pollution/src/App.js\";\n// import sampleData from \"./data/covids.json\";\nimport covidData from \"./data/jan.json\";\nimport React, { useState } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { StaticMap } from \"react-map-gl\";\nimport DeckGL from \"@deck.gl/react\";\nimport { AmbientLight, PointLight, LightingEffect } from \"@deck.gl/core\";\nimport { HexagonLayer } from \"@deck.gl/aggregation-layers\";\nimport { message, Typography } from \"antd\";\nimport { Statistic } from \"antd\";\nimport { Divider } from \"antd\";\nimport { Menu, Dropdown, Button } from \"antd\";\nimport { DownOutlined } from \"@ant-design/icons\"; // import RangeInput from \"./range-input\";\n\nconst {\n  Title,\n  Text\n} = Typography; // Set your mapbox access token here\n\nconst mapboxApiAccessToken = \"pk.eyJ1IjoidmVyYTFrIiwiYSI6ImNrZjQ3aWJoczA4ZGQydm43cXFjcW5peTkifQ.sYJ99dX7B8QyPgV_-TszTA\"; // eslint-disable-line\n\nconst ambientLight = new AmbientLight({\n  color: [255, 255, 255],\n  intensity: 1.0\n});\nconst pointLight1 = new PointLight({\n  color: [255, 255, 255],\n  intensity: 0.8,\n  position: [-0.144528, 49.739968, 80000]\n});\nconst pointLight2 = new PointLight({\n  color: [255, 255, 255],\n  intensity: 0.8,\n  position: [-3.807751, 54.104682, 8000]\n});\nconst lightingEffect = new LightingEffect({\n  ambientLight,\n  pointLight1,\n  pointLight2\n});\nconst material = {\n  ambient: 0.64,\n  diffuse: 0.6,\n  shininess: 32,\n  specularColor: [51, 51, 51]\n};\nconst INITIAL_VIEW_STATE = {\n  longitude: 122.0,\n  latitude: 15.0,\n  zoom: 6,\n  minZoom: 2,\n  maxZoom: 15,\n  pitch: 40.5,\n  bearing: -27\n};\nexport const colorRange = [[1, 152, 189], [73, 227, 206], [216, 254, 181], [254, 237, 177], [254, 173, 84], [209, 55, 78]];\n/**\n \n  [${randomData} * x / 255, 120, 255]\n */\n\nexport const heatmapColorRange = [[255, 255, 178], [254, 217, 118], [254, 178, 76], [253, 141, 60], [240, 59, 32], [189, 0, 38]];\n\nfunction getTooltip({\n  object\n}) {\n  if (!object) {\n    return null;\n  }\n\n  console.log(object);\n  const lat = object.position[1];\n  const lng = object.position[0];\n  const airQ = object.colorValue;\n  const infectionCount = object.elevationValue;\n  return `\\\n    Latitude: ${Number.isFinite(lat) ? lat.toFixed(6) : \"\"}\n    Longitude: ${Number.isFinite(lng) ? lng.toFixed(6) : \"\"}\n    Air Quality: ${airQ} \n    Number of Infections: ${infectionCount} `;\n}\n\nfunction getInfectionsCount(data) {\n  var count = 0;\n\n  for (var i = 0; i < data.length; i++) {\n    count += data[i].infections;\n  }\n\n  return count;\n}\n\nexport default function App({\n  intensity = 1,\n  threshold = 0.1,\n  radiusPixels = 30,\n  mapStyle = \"mapbox://styles/mapbox/dark-v9\",\n  coverage = 1\n}) {\n  // const [elevationIndex, setElevationIndex] = useState(\"infections\");\n  // const [pollutant, setPollutant] = useState(\"CO\");\n  const data = covidData; // const elevationIndexMenu = (\n  //   <Menu onClick={changeElevationIndex}>\n  //     <Menu.Item key=\"infections\">Covid-19 Infections</Menu.Item>\n  //     <Menu.Item key=\"Temperatures\">Temperatures</Menu.Item>\n  //   </Menu>\n  // )\n  // function changeElevationIndex(e) {\n  //   setElevationIndex(e.key);\n  //   message.success(\"Currently showing: \" + e.key, 1);\n  // }\n  // const pollutantMenu = (\n  //   <Menu onClick={changePollutant}>\n  //     <Menu.Item key=\"totalIndex\">Total Index</Menu.Item>\"\n  //     <Menu.Item key=\"CO\">Carbon</Menu.Item>\n  //     <Menu.Item key=\"N_Oxides\">Nitrogen Oxides</Menu.Item>\n  //     <Menu.Item key=\"CH4\">Methane</Menu.Item>\n  //     <Menu.Item key=\"O3\">Ozone</Menu.Item>\n  //   </Menu>\n  // )\n  // function changePollutant(e) {\n  //   setPollutant(e.key);\n  //   message.success(\"Currently showing: \" + e.key, 1);\n  // }\n\n  const layers = [new HexagonLayer({\n    id: \"hexagon\",\n    colorRange,\n    coverage,\n    data,\n    elevationRange: [0, 200],\n    elevationScale: 4,\n    extruded: true,\n    elevationScale: data && data.length * .5,\n    getElevationValue: points => points.reduce((sum, point) => sum + point.infections.value, 0) * points.length,\n    getPosition: d => [d.COORDINATES[0], d.COORDINATES[1]],\n    getColorValue: d => d.reduce((sum, point) => sum + point[\"CO\"], 0) / d.length,\n    pickable: true,\n    radius: 1600,\n    material\n  })];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    style: {\n      height: \"100vh\",\n      width: \"100vw\",\n      padding: 290,\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: \"white\",\n      zIndex: \"1000\",\n      position: \"absolute\",\n      marginTop: \"1.0%\",\n      right: \"1.5%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      height: \"470px\",\n      width: \"340px\",\n      paddingLeft: \"20px\",\n      paddingRight: \"20px\",\n      paddingTop: \"12px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, \"USA Air Pollutants vs Covid-19 Infections/Temperature\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      paddingTop: \"6px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: \"12px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Statistic, {\n    title: \"Total Covid-19 Infections: \",\n    value: getInfectionsCount(data),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignContent: \"center\",\n      justifyContent: \"space-around\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      zIndex: \"-1\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DeckGL, {\n    effects: [lightingEffect],\n    initialViewState: INITIAL_VIEW_STATE,\n    controller: true,\n    layers: layers,\n    getTooltip: getTooltip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StaticMap, {\n    reuseMaps: true,\n    mapStyle: mapStyle,\n    preventStyleDiffing: true,\n    mapboxApiAccessToken: mapboxApiAccessToken,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/lchen/Documents/CODE/vizCode/air-pollution/src/App.js"],"names":["covidData","React","useState","StaticMap","DeckGL","AmbientLight","PointLight","LightingEffect","HexagonLayer","message","Typography","Statistic","Divider","Menu","Dropdown","Button","DownOutlined","Title","Text","mapboxApiAccessToken","ambientLight","color","intensity","pointLight1","position","pointLight2","lightingEffect","material","ambient","diffuse","shininess","specularColor","INITIAL_VIEW_STATE","longitude","latitude","zoom","minZoom","maxZoom","pitch","bearing","colorRange","heatmapColorRange","getTooltip","object","console","log","lat","lng","airQ","colorValue","infectionCount","elevationValue","Number","isFinite","toFixed","getInfectionsCount","data","count","i","length","infections","App","threshold","radiusPixels","mapStyle","coverage","layers","id","elevationRange","elevationScale","extruded","getElevationValue","points","reduce","sum","point","value","getPosition","d","COORDINATES","getColorValue","pickable","radius","height","width","padding","margin","backgroundColor","zIndex","marginTop","right","display","flexDirection","paddingLeft","paddingRight","paddingTop","alignItems","justifyContent","alignContent"],"mappings":"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","sourcesContent":["// import sampleData from \"./data/covids.json\";\nimport covidData from \"./data/jan.json\";\nimport React, { useState } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { StaticMap } from \"react-map-gl\";\nimport DeckGL from \"@deck.gl/react\";\nimport { AmbientLight, PointLight, LightingEffect } from \"@deck.gl/core\";\nimport { HexagonLayer } from \"@deck.gl/aggregation-layers\";\nimport { message, Typography } from \"antd\";\nimport { Statistic } from \"antd\";\nimport { Divider } from \"antd\";\nimport { Menu, Dropdown, Button } from \"antd\";\nimport { DownOutlined} from \"@ant-design/icons\";\n\n// import RangeInput from \"./range-input\";\nconst { Title, Text } = Typography;\n\n\n// Set your mapbox access token here\nconst mapboxApiAccessToken =\n  \"pk.eyJ1IjoidmVyYTFrIiwiYSI6ImNrZjQ3aWJoczA4ZGQydm43cXFjcW5peTkifQ.sYJ99dX7B8QyPgV_-TszTA\"; // eslint-disable-line\n\nconst ambientLight = new AmbientLight({\n  color: [255, 255, 255],\n  intensity: 1.0\n});\n\nconst pointLight1 = new PointLight({\n  color: [255, 255, 255],\n  intensity: 0.8,\n  position: [-0.144528, 49.739968, 80000]\n});\n\nconst pointLight2 = new PointLight({\n  color: [255, 255, 255],\n  intensity: 0.8,\n  position: [-3.807751, 54.104682, 8000]\n});   \n\nconst lightingEffect = new LightingEffect({ambientLight, pointLight1, pointLight2});\n\nconst material = {\n  ambient: 0.64,\n  diffuse: 0.6,\n  shininess: 32,\n  specularColor: [51, 51, 51]\n};\n\nconst INITIAL_VIEW_STATE = {\n  longitude: 122.0,\n  latitude: 15.0,\n  zoom: 6,\n  minZoom: 2,\n  maxZoom: 15,\n  pitch: 40.5,\n  bearing: -27\n};\n\nexport const colorRange = [\n  [1, 152, 189],\n  [73, 227, 206],\n  [216, 254, 181],\n  [254, 237, 177],\n  [254, 173, 84],\n  [209, 55, 78]\n];\n/**\n \n  [${randomData} * x / 255, 120, 255]\n */\nexport const heatmapColorRange = [\n  [255, 255, 178],\n  [254, 217, 118],\n  [254, 178, 76],\n  [253, 141, 60],\n  [240, 59, 32],\n  [189, 0, 38],\n];\n\n\nfunction getTooltip({ object }) {\n  if (!object) {\n    return null;\n  }\n  console.log(object);\n  const lat = object.position[1];\n  const lng = object.position[0];\n  const airQ = object.colorValue;\n  const infectionCount = object.elevationValue;\n\n  return `\\\n    Latitude: ${Number.isFinite(lat) ? lat.toFixed(6) : \"\"}\n    Longitude: ${Number.isFinite(lng) ? lng.toFixed(6) : \"\"}\n    Air Quality: ${airQ} \n    Number of Infections: ${infectionCount} `;\n}\n\n\nfunction getInfectionsCount(data) {\n  var count = 0;\n  for (var i = 0; i < data.length; i++) {\n\n    count += data[i].infections;\n  }\n  return count;\n}\n\nexport default function App({\n  intensity = 1,\n  threshold = 0.1,\n  radiusPixels = 30,\n  mapStyle = \"mapbox://styles/mapbox/dark-v9\",\n  coverage = 1,\n}) {\n  // const [elevationIndex, setElevationIndex] = useState(\"infections\");\n  // const [pollutant, setPollutant] = useState(\"CO\");\n  const data = covidData;\n\n  // const elevationIndexMenu = (\n  //   <Menu onClick={changeElevationIndex}>\n  //     <Menu.Item key=\"infections\">Covid-19 Infections</Menu.Item>\n  //     <Menu.Item key=\"Temperatures\">Temperatures</Menu.Item>\n  //   </Menu>\n  // )\n  \n  // function changeElevationIndex(e) {\n  //   setElevationIndex(e.key);\n  //   message.success(\"Currently showing: \" + e.key, 1);\n  // }\n\n  // const pollutantMenu = (\n  //   <Menu onClick={changePollutant}>\n  //     <Menu.Item key=\"totalIndex\">Total Index</Menu.Item>\"\n  //     <Menu.Item key=\"CO\">Carbon</Menu.Item>\n  //     <Menu.Item key=\"N_Oxides\">Nitrogen Oxides</Menu.Item>\n  //     <Menu.Item key=\"CH4\">Methane</Menu.Item>\n  //     <Menu.Item key=\"O3\">Ozone</Menu.Item>\n  //   </Menu>\n  // )\n\n  // function changePollutant(e) {\n  //   setPollutant(e.key);\n  //   message.success(\"Currently showing: \" + e.key, 1);\n  // }\n\n\n  const layers = [\n          new HexagonLayer({\n          id: \"hexagon\",\n          colorRange,\n          coverage,\n          data,\n          elevationRange: [0, 200],\n          elevationScale: 4,\n          extruded: true,\n          elevationScale: data && data.length * .5,\n          getElevationValue: points => points.reduce((sum, point) => sum + point.infections.value, 0) * points.length,\n          getPosition: (d) => [d.COORDINATES[0], d.COORDINATES[1]],\n          getColorValue: (d) => ((d.reduce((sum, point) => sum + point[\"CO\"], 0)) / d.length),\n          pickable: true,\n          radius: 1600,\n          material,\n        })\n  ];\n\n  return (\n    <div\n      className=\"container\"\n      style={{ height: \"100vh\", width: \"100vw\", padding: 290, margin: 0 }}\n    >\n      <div\n        style={{\n          backgroundColor: \"white\",\n          zIndex: \"1000\",\n          position: \"absolute\",\n          marginTop: \"1.0%\",\n          right: \"1.5%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          height: \"470px\",\n          width: \"340px\",\n          paddingLeft: \"20px\",\n          paddingRight: \"20px\",\n          paddingTop: \"12px\",\n        }}\n      >\n        <Title level={4}>USA Air Pollutants vs Covid-19 Infections/Temperature</Title>\n        {/* <div\n          style={{\n            display: \"flex\", \n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}>\n        <Text>Air Pollution Safety Index</Text>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent: \"space-evenly\",\n            paddingTop: \"16.66667px\",\n          }}\n        >\n          {colorRange.map((color) => (\n                <div\n                  style={{\n                    width: \"15%\",\n                    height: \"18px\",\n                    backgroundColor: `rgb(${color[0]}, ${color[1]}, ${color[2]})`,\n                  }}\n                />\n              ))}\n        </div> */}\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            paddingTop: \"6px\",\n          }}\n        >\n          {/* <Text>Safe</Text>\n          <Text>Hazardous</Text> */}\n        </div>\n        <div style={{ paddingTop: \"12px\" }}>\n          <Statistic title=\"Total Covid-19 Infections: \" value={getInfectionsCount(data)} />\n        </div>\n        <Divider />\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignContent: \"center\",\n            justifyContent: \"space-around\",\n          }}\n        >\n        {/* <div style={{ paddingTop: \"24px\", paddingLeft: \"50%\" }}>\n          <Text>\n            View Code:{\" \"}\n            <a href=\"https://github.com/Xsort-Programming/one-health-approach\">GitHub</a>\n          </Text>\n        </div> */}\n      </div>\n      </div>\n      <Divider />\n      {/* <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignContent: \"center\",\n          justifyContent: \"space-around\",\n        }}\n        >\n          <Dropdown overlay={elevationIndexMenu} placement=\"bottomRight\">\n            <Button>\n              {elevationIndex ? elevationIndex : \" Covid/Temp \"} <DownOutlined />\n            </Button>\n          </Dropdown>\n        </div> */}\n      <div\n        style={{\n          zIndex: \"-1\",\n        }}\n      >\n        <DeckGL\n          effects={[lightingEffect]}\n          initialViewState={INITIAL_VIEW_STATE}\n          controller={true}\n          layers={layers}\n          getTooltip={getTooltip}\n        >\n          <StaticMap\n            reuseMaps\n            mapStyle={mapStyle}\n            preventStyleDiffing={true}\n            mapboxApiAccessToken={mapboxApiAccessToken}\n          />\n        </DeckGL>\n      </div>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}