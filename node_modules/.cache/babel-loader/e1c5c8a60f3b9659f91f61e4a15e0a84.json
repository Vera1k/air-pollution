{"ast":null,"code":"var _jsxFileName = \"/Users/lchen/Documents/CODE/vizCode/air-pollution/src/App.js\";\nimport React, { useState, useMemo } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { StaticMap } from \"react-map-gl\";\nimport DeckGL from \"@deck.gl/react\";\nimport { HeatmapLayer } from \"@deck.gl/aggregation-layers\";\nimport { AmbientLight, PointLight, LightingEffect } from \"@deck.gl/core\";\nimport { HexagonLayer } from \"@deck.gl/aggregation-layers\";\nimport { Menu, Dropdown, Button, message, Slider } from \"antd\";\nimport { DownOutlined } from \"@ant-design/icons\";\nimport { Typography } from \"antd\";\nimport { Statistic } from \"antd\";\nimport { Divider } from \"antd\";\nimport RangeInput from \"./range-input\";\nconst {\n  Title,\n  Text\n} = Typography;\nimport covidData from \"./data/covids.json\"; // Set your mapbox access token here\n\nconst MAPBOX_ACCESS_TOKEN = \"pk.eyJ1IjoidmVyYTFrIiwiYSI6ImNrZjZ5bWZ3YzBhNDEycWxiZHBycDFrZnoifQ.hVFCurngFTtg2R0ivt-zyg\"; // eslint-disable-line\n\nconst ambientLight = new AmbientLight({\n  color: [255, 255, 255],\n  intensity: 1.0\n});\nconst pointLight1 = new PointLight({\n  color: [255, 255, 255],\n  intensity: 0.8,\n  position: [-0.144528, 49.739968, 80000]\n});\nconst pointLight2 = new PointLight({\n  color: [255, 255, 255],\n  intensity: 0.8,\n  position: [-3.807751, 54.104682, 8000]\n});\nconst lightingEffect = new LightingEffect({\n  ambientLight,\n  pointLight1,\n  pointLight2\n});\nconst material = {\n  ambient: 0.64,\n  diffuse: 0.6,\n  shininess: 32,\n  specularColor: [51, 51, 51]\n};\nconst INITIAL_VIEW_STATE = {\n  longitude: -1.415727,\n  latitude: 52.232395,\n  zoom: 6.6,\n  minZoom: 5,\n  maxZoom: 15,\n  pitch: 40.5,\n  bearing: -27\n};\nexport const colorRange = [[1, 152, 189], [73, 227, 206], [216, 254, 181], [254, 237, 177], [254, 173, 84], [209, 55, 78]];\nexport const heatmapColorRange = [[255, 255, 178], [254, 217, 118], [254, 178, 76], [253, 141, 60], [240, 59, 32], [189, 0, 38]];\n\nfunction getTooltip({\n  object\n}) {\n  if (!object) {\n    return null;\n  }\n\n  const lat = object.position[1];\n  const lng = object.position[0];\n  const count = object.points.length;\n  return `\\\n    Latitude: ${Number.isFinite(lat) ? lat.toFixed(6) : \"\"}\n    Longitude: ${Number.isFinite(lng) ? lng.toFixed(6) : \"\"}\n    Number of Covid-19 Infections: ${count} `;\n}\n\nfunction getInfectionsCount(data) {\n  return data.length;\n}\n\nexport default function App({\n  intensity = 1,\n  threshold = 0.1,\n  radiusPixels = 30,\n  mapStyle = \"mapbox://styles/mapbox/dark-v9\",\n  // upperPercentile = 100,\n  coverage = 1\n}) {\n  const [vis, setVis] = useState(\"Hexagon\");\n  const [data, setData] = useState(covidData);\n  const [percentile, setPercentile] = useState([0, 100]);\n  const [airPollution, setAirpollution] = useState(covidData.airQuality);\n  const layers = [data && vis === \"Hexagon\" ? new HexagonLayer({\n    id: \"hexagon\",\n    colorRange,\n    coverage,\n    data,\n    elevationRange: [0, 200],\n    elevationScale: data && data.length ? 50 : 0,\n    extruded: true,\n    getPosition: d => [d.COORDINATES[1], d.COORDINATES[0]],\n    pickable: true,\n    radius: 100,\n    upperPercentile: percentile[1],\n    lowerPercentile: percentile[0],\n    material,\n    transitions: {\n      elevationScale: 1000\n    }\n  }) : null];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    style: {\n      height: \"100vh\",\n      width: \"100vw\",\n      padding: 0,\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: \"white\",\n      zIndex: \"1000\",\n      position: \"absolute\",\n      marginTop: \"1.0%\",\n      right: \"1.5%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      height: \"470px\",\n      width: \"340px\",\n      paddingLeft: \"20px\",\n      paddingRight: \"20px\",\n      paddingTop: \"12px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, \"[Title here air pollution]\"), /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, \"Air pollution temp and covid19 infection\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      justifyContent: \"space-evenly\",\n      paddingTop: \"16px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, vis === \"Hexagon\" ? colorRange.map(color => /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"16.6667%\",\n      height: \"18px\",\n      backgroundColor: `rgb(${color[0]}, ${color[1]}, ${color[2]})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  })) : heatmapColorRange.map(color => /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"16.6667%\",\n      height: \"18px\",\n      backgroundColor: `rgb(${color[0]}, ${color[1]}, ${color[2]})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      paddingTop: \"6px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }, \"Safe\"), /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, \"Dangerous\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: \"12px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Statistic, {\n    title: \"Covid-19 Infections\",\n    value: getInfectionsCount(data),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignContent: \"center\",\n      justifyContent: \"space-around\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: \"24px\",\n      paddingLeft: \"60%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }\n  }, \"View Code:\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://github.com/Xsort-Programming/one-health-approach\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, \"GitHub\")))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      zIndex: \"-1\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DeckGL, {\n    effects: [lightingEffect],\n    initialViewState: INITIAL_VIEW_STATE,\n    controller: true,\n    layers: layers,\n    getTooltip: getTooltip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StaticMap, {\n    reuseMaps: true,\n    mapStyle: mapStyle,\n    preventStyleDiffing: true,\n    mapboxApiAccessToken: MAPBOX_ACCESS_TOKEN,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 11\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/lchen/Documents/CODE/vizCode/air-pollution/src/App.js"],"names":["React","useState","useMemo","StaticMap","DeckGL","HeatmapLayer","AmbientLight","PointLight","LightingEffect","HexagonLayer","Menu","Dropdown","Button","message","Slider","DownOutlined","Typography","Statistic","Divider","RangeInput","Title","Text","covidData","MAPBOX_ACCESS_TOKEN","ambientLight","color","intensity","pointLight1","position","pointLight2","lightingEffect","material","ambient","diffuse","shininess","specularColor","INITIAL_VIEW_STATE","longitude","latitude","zoom","minZoom","maxZoom","pitch","bearing","colorRange","heatmapColorRange","getTooltip","object","lat","lng","count","points","length","Number","isFinite","toFixed","getInfectionsCount","data","App","threshold","radiusPixels","mapStyle","coverage","vis","setVis","setData","percentile","setPercentile","airPollution","setAirpollution","airQuality","layers","id","elevationRange","elevationScale","extruded","getPosition","d","COORDINATES","pickable","radius","upperPercentile","lowerPercentile","transitions","height","width","padding","margin","backgroundColor","zIndex","marginTop","right","display","flexDirection","paddingLeft","paddingRight","paddingTop","alignItems","justifyContent","map","alignContent"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { StaticMap } from \"react-map-gl\";\nimport DeckGL from \"@deck.gl/react\";\nimport { HeatmapLayer } from \"@deck.gl/aggregation-layers\";\nimport { AmbientLight, PointLight, LightingEffect } from \"@deck.gl/core\";\nimport { HexagonLayer } from \"@deck.gl/aggregation-layers\";\nimport { Menu, Dropdown, Button, message, Slider } from \"antd\";\nimport { DownOutlined } from \"@ant-design/icons\";\nimport { Typography } from \"antd\";\nimport { Statistic } from \"antd\";\nimport { Divider } from \"antd\";\nimport RangeInput from \"./range-input\";\nconst { Title, Text } = Typography;\nimport covidData from \"./data/covids.json\";\n\n// Set your mapbox access token here\nconst MAPBOX_ACCESS_TOKEN =\n  \"pk.eyJ1IjoidmVyYTFrIiwiYSI6ImNrZjZ5bWZ3YzBhNDEycWxiZHBycDFrZnoifQ.hVFCurngFTtg2R0ivt-zyg\"; // eslint-disable-line\n\nconst ambientLight = new AmbientLight({\n  color: [255, 255, 255],\n  intensity: 1.0\n});\n\nconst pointLight1 = new PointLight({\n  color: [255, 255, 255],\n  intensity: 0.8,\n  position: [-0.144528, 49.739968, 80000]\n});\n\nconst pointLight2 = new PointLight({\n  color: [255, 255, 255],\n  intensity: 0.8,\n  position: [-3.807751, 54.104682, 8000]\n});   \n\nconst lightingEffect = new LightingEffect({ambientLight, pointLight1, pointLight2});\n\nconst material = {\n  ambient: 0.64,\n  diffuse: 0.6,\n  shininess: 32,\n  specularColor: [51, 51, 51]\n};\n\nconst INITIAL_VIEW_STATE = {\n  longitude: -1.415727,\n  latitude: 52.232395,\n  zoom: 6.6,\n  minZoom: 5,\n  maxZoom: 15,\n  pitch: 40.5,\n  bearing: -27\n};\n\nexport const colorRange = [\n  [1, 152, 189],\n  [73, 227, 206],\n  [216, 254, 181],\n  [254, 237, 177],\n  [254, 173, 84],\n  [209, 55, 78]\n];\n\nexport const heatmapColorRange = [\n  [255, 255, 178],\n  [254, 217, 118],\n  [254, 178, 76],\n  [253, 141, 60],\n  [240, 59, 32],\n  [189, 0, 38],\n];\n\nfunction getTooltip({ object }) {\n  if (!object) {\n    return null;\n  }\n  const lat = object.position[1];\n  const lng = object.position[0];\n  const count = object.points.length;\n\n  return `\\\n    Latitude: ${Number.isFinite(lat) ? lat.toFixed(6) : \"\"}\n    Longitude: ${Number.isFinite(lng) ? lng.toFixed(6) : \"\"}\n    Number of Covid-19 Infections: ${count} `;\n}\n\nfunction getInfectionsCount(data) {\n  return data.length;\n}\n\nexport default function App({\n  intensity = 1,\n  threshold = 0.1,\n  radiusPixels = 30,\n  mapStyle = \"mapbox://styles/mapbox/dark-v9\",\n  // upperPercentile = 100,\n  coverage = 1,\n}) {\n  const [vis, setVis] = useState(\"Hexagon\");\n  const [data, setData] = useState(covidData);\n\n\n  const [percentile, setPercentile] = useState([0, 100]);\n\n  const [airPollution, setAirpollution] = useState(covidData.airQuality);\n\n  const layers = [\n    data && vis === \"Hexagon\"\n      ? new HexagonLayer({\n          id: \"hexagon\",\n          colorRange,\n          coverage,\n          data,\n          elevationRange: [0, 200],\n          elevationScale: data && data.length ? 50 : 0,\n          extruded: true,\n          getPosition: (d) => [d.COORDINATES[1], d.COORDINATES[0]],\n          pickable: true,\n          radius: 100,\n          upperPercentile: percentile[1],\n          lowerPercentile: percentile[0],\n          material,\n\n          transitions: {\n            elevationScale: 1000,\n          },\n        })\n      : null,\n  ];\n\n  return (\n    <div\n      className=\"container\"\n      style={{ height: \"100vh\", width: \"100vw\", padding: 0, margin: 0 }}\n    >\n      <div\n        style={{\n          backgroundColor: \"white\",\n          zIndex: \"1000\",\n          position: \"absolute\",\n          marginTop: \"1.0%\",\n          right: \"1.5%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          height: \"470px\",\n          width: \"340px\",\n          paddingLeft: \"20px\",\n          paddingRight: \"20px\",\n          paddingTop: \"12px\",\n        }}\n      >\n        <Title level={4}>[Title here air pollution]</Title>\n        <Text>Air pollution temp and covid19 infection</Text>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"space-evenly\",\n            paddingTop: \"16px\",\n          }}\n        >\n          {vis === \"Hexagon\"\n            ? colorRange.map((color) => (\n                <div\n                  style={{\n                    width: \"16.6667%\",\n                    height: \"18px\",\n                    backgroundColor: `rgb(${color[0]}, ${color[1]}, ${color[2]})`,\n                  }}\n                />\n              ))\n            : heatmapColorRange.map((color) => (\n                <div\n                  style={{\n                    width: \"16.6667%\",\n                    height: \"18px\",\n                    backgroundColor: `rgb(${color[0]}, ${color[1]}, ${color[2]})`,\n                  }}\n                />\n              ))}\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            paddingTop: \"6px\",\n          }}\n        >\n          <Text>Safe</Text>\n          <Text>Dangerous</Text>\n        </div>\n        <div style={{ paddingTop: \"12px\" }}>\n          <Statistic title=\"Covid-19 Infections\" value={getInfectionsCount(data)} />\n        </div>\n        <Divider />\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignContent: \"center\",\n            justifyContent: \"space-around\",\n          }}\n        >\n        <div style={{ paddingTop: \"24px\", paddingLeft: \"60%\" }}>\n          <Text>\n            View Code:{\" \"}\n            <a href=\"https://github.com/Xsort-Programming/one-health-approach\">GitHub</a>\n          </Text>\n        </div>\n      </div>\n      <div\n        style={{\n          zIndex: \"-1\",\n        }}\n      >\n        <DeckGL\n          effects={[lightingEffect]}\n          initialViewState={INITIAL_VIEW_STATE}\n          controller={true}\n          layers={layers}\n          getTooltip={getTooltip}\n        >\n          <StaticMap\n            reuseMaps\n            mapStyle={mapStyle}\n            preventStyleDiffing={true}\n            mapboxApiAccessToken={MAPBOX_ACCESS_TOKEN}\n          />\n        </DeckGL>\n      </div>\n      </div>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}